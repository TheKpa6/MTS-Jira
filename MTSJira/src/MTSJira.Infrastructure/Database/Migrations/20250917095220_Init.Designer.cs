// <auto-generated />
using MTSJira.Infrastructure.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MTSJira.Infrastructure.Database.Migrations
{
    [DbContext(typeof(JiraDbContext))]
    [Migration("20250917095220_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MTSJira.Domain.Entities.EnumEntity<MTSJira.Domain.Entities.Enums.TaskPriority>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("task_priorities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.EnumEntity<MTSJira.Domain.Entities.Enums.TaskStatus>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("task_statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "New"
                        },
                        new
                        {
                            Id = 1,
                            Name = "InProgress"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.TaskData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Assignee")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("assignee");

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("author");

                    b.Property<int?>("ParentTaskId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_task_id");

                    b.Property<int>("Priority")
                        .HasColumnType("integer")
                        .HasColumnName("priority_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("tasks", (string)null);
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.TaskRelationshipData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RelatedTaskId")
                        .HasColumnType("integer")
                        .HasColumnName("related_task_id");

                    b.Property<int>("SourceTaskId")
                        .HasColumnType("integer")
                        .HasColumnName("source_task_id");

                    b.HasKey("Id");

                    b.HasIndex("RelatedTaskId");

                    b.HasIndex("SourceTaskId");

                    b.ToTable("tasks_relationships", (string)null);
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.TaskData", b =>
                {
                    b.HasOne("MTSJira.Domain.Entities.TaskData", "ParentTask")
                        .WithMany("Subtasks")
                        .HasForeignKey("ParentTaskId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.TaskRelationshipData", b =>
                {
                    b.HasOne("MTSJira.Domain.Entities.TaskData", "RelatedTask")
                        .WithMany("RelatedToTasks")
                        .HasForeignKey("RelatedTaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MTSJira.Domain.Entities.TaskData", "SourceTask")
                        .WithMany("RelatedTasks")
                        .HasForeignKey("SourceTaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RelatedTask");

                    b.Navigation("SourceTask");
                });

            modelBuilder.Entity("MTSJira.Domain.Entities.TaskData", b =>
                {
                    b.Navigation("RelatedTasks");

                    b.Navigation("RelatedToTasks");

                    b.Navigation("Subtasks");
                });
#pragma warning restore 612, 618
        }
    }
}
